{"version":3,"sources":["logo.svg","Components/pages/Home.js","Components/pages/About.js","Components/pages/Contact.js","Components/Layout/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","src","process","alt","width","height","About","Contact","class","for","type","id","aria-describedby","placeholder","Navbar","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,kC,iGCoB5BC,G,8BAhBH,WAEZ,OACA,yBAAKC,UAAU,aACf,yBAAKA,UAAU,QAEf,gEACA,yBAAKC,IAAKC,uBAAsCC,IAAI,QAAQC,MAAM,QAAQC,OAAO,cCIlEC,EAbF,WAEb,OACA,yBAAKN,UAAU,aACf,yBAAKA,UAAU,QAEf,qCACA,uBAAGA,UAAU,QAAb,gCCwBeO,EA/BA,WAEf,OACA,yBAAKP,UAAU,aACf,yBAAKA,UAAU,QAEf,4CAEA,8BACE,yBAAKQ,MAAM,cACT,2BAAOC,IAAI,sBAAX,iBACA,2BAAOC,KAAK,QAAQF,MAAM,eAAeG,GAAG,qBAAqBC,mBAAiB,YAAYC,YAAY,gBAC1G,2BAAOF,GAAG,YAAYH,MAAM,wBAA5B,mDAEF,yBAAKA,MAAM,cACT,2BAAOC,IAAI,yBAAX,YACA,2BAAOC,KAAK,WAAWF,MAAM,eAAeG,GAAG,wBAAwBE,YAAY,cAErF,yBAAKL,MAAM,cACT,2BAAOE,KAAK,WAAWF,MAAM,mBAAmBG,GAAG,kBACnD,2BAAOH,MAAM,mBAAmBC,IAAI,iBAApC,iBAEF,4BAAQC,KAAK,SAASF,MAAM,mBAA5B,c,OCWaM,EAhCF,WAEZ,OAED,yBAAKN,MAAM,kDACX,yBAAKR,UAAU,aACb,kBAAC,IAAD,CAAMQ,MAAM,eAAeO,GAAG,KAA9B,qBACA,4BAAQP,MAAM,iBAAiBE,KAAK,SAASM,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACtJ,0BAAMZ,MAAM,yBAEd,yBAAKA,MAAM,2BAA2BG,GAAG,aACvC,wBAAIH,MAAM,cACR,wBAAIA,MAAM,mBACR,kBAAC,IAAD,CAAMA,MAAM,WAAWO,GAAG,KAA1B,QAAmC,0BAAMP,MAAM,WAAZ,eAErC,wBAAIA,MAAM,YACR,kBAAC,IAAD,CAAMA,MAAM,WAAWO,GAAG,UAA1B,UAEF,wBAAIP,MAAM,YACR,kBAAC,IAAD,CAAMA,MAAM,WAAWO,GAAG,YAA1B,iB,OCOOM,MAlBf,WACE,OACE,kBAAC,IAAD,KACA,yBAAKrB,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,IAAD,KACJ,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAIC,UAAWzB,IACjC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,SAASC,UAAWlB,IACtC,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,WAAWC,UAAWjB,QCPpBkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b291dc44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n const Home=()=>{\r\n\r\nreturn (\r\n<div className=\"container\">\r\n<div className=\"py-4\">\r\n\r\n<h1>Passion to Innovate and Research</h1>\r\n<img src={process.env.PUBLIC_URL +\"/myimg.jpg\"} alt=\"mypic\" width=\"400px\" height=\"450px\" />\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n\t);\r\n\r\n}\r\nexport default Home;","import React from 'react';\r\n\r\n const About=()=>{\r\n\r\nreturn (\r\n<div className=\"container\">\r\n<div className=\"py-4\">\r\n\r\n<h1>About</h1>\r\n<p className=\"lead\">Maintenance In Progress..</p>\r\n</div>\r\n</div>\r\n\t);\r\n\r\n}\r\nexport default About;","import React from 'react';\r\n\r\n const Contact=()=>{\r\n\r\nreturn (\r\n<div className=\"container\">\r\n<div className=\"py-4\">\r\n\r\n<h1>Contact Page</h1>\r\n\r\n<form>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputEmail1\">Email address</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"/>\r\n  </div>\r\n  <div class=\"form-check\">\r\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\"/>\r\n    <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>\r\n\r\n</div>\r\n\r\n\t);\r\n\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar=()=>{\r\n\r\n\treturn (\r\n\r\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n<div className=\"container\">\r\n  <Link class=\"navbar-brand\" to=\"#\">Sanjay Tech Stack</Link>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n        <Link class=\"nav-link\" to=\"/\">Home <span class=\"sr-only\">(current)</span></Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/about\">About</Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/contact\">Contact</Link>\r\n      </li>\r\n     { /*<li class=\"nav-item\">\r\n        <Link class=\"nav-link disabled\" to=\"#\">Disabled</Link>\r\n      </li>*/}\r\n    </ul>\r\n  </div>\r\n \r\n  </div>\r\n</nav>\r\n\r\n\t\t);\r\n}\r\nexport default Navbar;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport Home from './Components/pages/Home';\nimport About from './Components/pages/About';\nimport Contact from './Components/pages/Contact';\nimport Navbar from './Components/Layout/Navbar';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Navbar />\n    <Switch>\n<Route exact path=\"/\" component={Home} />\n<Route exact path=\"/about\" component={About} />\n<Route exact path=\"/contact\" component={Contact} />\n\n\n\n    </Switch>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}